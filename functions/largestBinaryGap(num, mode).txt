
/**
 * @param num
 * @param mode
 * @return returns the length of the longest string of mode = (0 or 1)
 * in the binary form of the given integer
 */
public int largestBinaryGap(int num, boolean mode) {
	// the string to test against the current digit
	String tester;
	if(mode == true) {
		tester = "1";
	} else {
		tester = "0";
	}
	
	// the gap length counter
	int gapcounter = 0;
	
	// the largest gap so far
	int largest = 0;
	
	for(String digit: Integer.toBinaryString(num).split("")) {
		// iterate through each digit
		
		if(digit.equals(tester)) {
			// increment the gap counter
			gapcounter++;
			
		} else {
			// gap ended see if it is bigger
			if(gapcounter > largest) {
				largest = gapcounter;
			}
			
			// prepare for the next gap
			gapcounter = 0;
		}
	}
	
	// return the largest binary gap
	return largest;
}