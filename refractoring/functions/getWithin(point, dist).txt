
/**
 * Get an arraylist of segments originating at point p where all segment's<br>
 * endpoints are within distance dist and one unit away from eachother in<br>
 * the x and y direction.<br>
 */
private ArrayList<Segment> getWithin(Point p, double dist) {
	// initialize an arraylist to return
	ArrayList<Segment> segs = new ArrayList<Segment>();
	
	// get all points of lesser y and greater x of ne
	Point ne = new Point(p.x, 		p.y - 1);
	int x = ne.x;
	int y = ne.y;
	double cr_dist = 1;
	while(cr_dist <= dist) {
		while(cr_dist <= dist) {
			// add the segment
			Segment newseg = new Segment(p, new Point(x, y));
			segs.add(newseg);
			// increment x
			x++;
			// get the new distance
			cr_dist = p.distance(x, y);
		}
		x = ne.x;
		// decrement y
		y--;
		// get the new distance
		cr_dist = p.distance(x, y);
	}
	
	// get all the points of greater x and greater y of se
	Point es = new Point(p.x + 1, 	p.y);
	x = es.x;
	y = es.y;
	cr_dist = 1;
	while(cr_dist <= dist) {
		while(cr_dist <= dist) {
			// add the segment
			Segment newseg = new Segment(p, new Point(x, y));
			segs.add(newseg);
			// increment y
			y++;
			// get the new distance
			cr_dist = p.distance(x, y);
		}
		y = es.y;
		// increment x
		x++;
		// get the new distance
		cr_dist = p.distance(x, y);
	}
	
	// get all the points of greater y and lesser x of sw
	Point sw = new Point(p.x, 	p.y + 1);
	x = sw.x;
	y = sw.y;
	cr_dist = 1;
	while(cr_dist <= dist) {
		while(cr_dist <= dist) {
			// add the segment
			Segment newseg = new Segment(p, new Point(x, y));
			segs.add(newseg);
			// decrement x
			x--;
			// get the new distance
			cr_dist = p.distance(x, y);
		}
		x = sw.x;
		// increment y
		y++;
		// get the new distance
		cr_dist = p.distance(x, y);
	}
	
	// get all the points of lesser x and lesser y of nw
	Point wn = new Point(p.x - 1, 	p.y);
	x = wn.x;
	y = wn.y;
	cr_dist = 1;
	while(cr_dist <= dist) {
		while(cr_dist <= dist) {
			// add the segment
			Segment newseg = new Segment(p, new Point(x, y));
			segs.add(newseg);
			// decrement y
			y--;
			// get the new distance
			cr_dist = p.distance(x, y);
		}
		y = wn.y;
		// decrement x
		x--;
		// get the new distance
		cr_dist = p.distance(x, y);
	}
	
	// return the segments
	return segs;
}